# =============================================================================
# Ultimate Security Intelligence Platform - 生產環境虛擬主機配置
# 包含前端、後端和 API 的反向代理設定
# =============================================================================

# -----------------------------------------------------------------------------
# HTTP 重定向到 HTTPS
# -----------------------------------------------------------------------------
server {
    listen 80;
    server_name your-domain.com www.your-domain.com api.your-domain.com;
    
    # 安全性標頭
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    
    # 健康檢查端點（不重定向）
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # 所有其他請求重定向到 HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# -----------------------------------------------------------------------------
# HTTPS 主站（前端）
# -----------------------------------------------------------------------------
server {
    listen 443 ssl http2;
    server_name your-domain.com www.your-domain.com;
    
    # SSL 憑證設定
    ssl_certificate /etc/nginx/ssl/your-domain.com.crt;
    ssl_certificate_key /etc/nginx/ssl/your-domain.com.key;
    
    # SSL 安全性設定
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # 安全性標頭
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    
    # 日誌設定
    access_log /var/log/nginx/frontend.access.log json_combined;
    error_log /var/log/nginx/frontend.error.log;
    
    # 健康檢查端點
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # 前端靜態資源快取
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        
        # 代理到前端服務
        proxy_pass http://frontend_servers;
        proxy_http_version 1.1;
        # 限制 Upgrade 標頭以防止 H2C 走私
    # 限制 Upgrade 標頭以防止 H2C 走私
    proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Next.js 特殊路由
    location /_next/static/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        proxy_pass http://frontend_servers;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # 所有其他請求代理到前端
    location / {
        # 連接限制
        limit_conn conn_limit 20;
        
        # 代理設定
        proxy_pass http://frontend_servers;
        proxy_http_version 1.1;
        # 限制 Upgrade 標頭以防止 H2C 走私
    # 限制 Upgrade 標頭以防止 H2C 走私
    proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
        
        # 超時設定
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 緩衝設定
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }
}

# -----------------------------------------------------------------------------
# API 伺服器（後端）
# -----------------------------------------------------------------------------
server {
    listen 443 ssl http2;
    server_name api.your-domain.com;
    
    # SSL 憑證設定
    ssl_certificate /etc/nginx/ssl/api.your-domain.com.crt;
    ssl_certificate_key /etc/nginx/ssl/api.your-domain.com.key;
    
    # SSL 安全性設定
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # 安全性標頭
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    
    # 日誌設定
    access_log /var/log/nginx/api.access.log json_combined;
    error_log /var/log/nginx/api.error.log;
    
    # 健康檢查端點
    location /health {
        access_log off;
        proxy_pass http://backend_servers/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    # 登入端點頻率限制
    location ~ ^/api/v1/(login|register|auth) {
        limit_req zone=login_limit burst=5 nodelay;
        limit_conn conn_limit 10;
        
        proxy_pass http://backend_servers;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_redirect off;
        
        # 超時設定
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # 緩衝設定
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }
    
    # 檔案上傳端點
    location ~ ^/api/v1/upload {
        limit_req zone=api_limit burst=10 nodelay;
        limit_conn conn_limit 5;
        
        client_max_body_size 50M;
        client_body_timeout 60s;
        
        proxy_pass http://backend_servers;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        
        # 上傳超時設定
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        proxy_request_buffering off;
    }
    
    # WebSocket 連接 (用於即時通知)
    location /ws {
        proxy_pass http://backend_servers;
        proxy_http_version 1.1;
        # 限制 Upgrade 標頭以防止 H2C 走私
    # 限制 Upgrade 標頭以防止 H2C 走私
    proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # WebSocket 超時設定
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 300s;
    }
    
    # 所有其他 API 請求
    location /api/ {
        limit_req zone=api_limit burst=20 nodelay;
        limit_conn conn_limit 50;
        
        proxy_pass http://backend_servers;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_redirect off;
        
        # 超時設定
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # 緩衝設定
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        
        # 快取設定（僅適用於 GET 請求）
        proxy_cache cache_zone;
        proxy_cache_valid 200 302 5m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_bypass $http_authorization;
        proxy_no_cache $http_authorization;
    }
    
    # 靜態檔案代理（如果後端提供靜態檔案）
    location /static/ {
        expires 1d;
        add_header Cache-Control "public, no-transform";
        
        proxy_pass http://backend_servers;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 快取設定
        proxy_cache cache_zone;
        proxy_cache_valid 200 1d;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
    }
}

# -----------------------------------------------------------------------------
# 監控和管理端點
# -----------------------------------------------------------------------------
server {
    listen 8080;
    server_name localhost;
    
    # 僅允許內部網路存取
    allow 127.0.0.1;
    allow 10.0.0.0/8;
    allow 172.16.0.0/12;
    allow 192.168.0.0/16;
    deny all;
    
    location /nginx_status {
        stub_status on;
        access_log off;
    }
    
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

# =============================================================================
# 設定說明
# =============================================================================
# 1. 請將 'your-domain.com' 替換為實際的域名
# 2. 請確保 SSL 憑證檔案存在於指定路徑
# 3. 根據實際需求調整頻率限制和超時設定
# 4. 監控端點僅允許內部網路存取
# ============================================================================= 